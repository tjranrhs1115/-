"""
def enqueue(que, data, max_length):
    if len(que) < max_length:               #만약 stack의 함수 길이가 max_length보다 짧으면
        que.append(data)                   #stack에다가 data를 더한다.
        print(que)                          #그리고 stack를 출력한다.
    else:
        print("overflow")                #그것도 아니라면 기준 초과라고 출력한다.

    return que                    #그리고 stack를 반환한다.


def dequeue(que):               #함수 stack를 뺀다.
    if 0 < len(que):      #만약 stack의 함수 길이가 0보다 길면
        del que[0]               #stack의 맨 뒤의 값을 삭제한다.
        print(que)                        #그리고 stack를 출력시킨다.
    else:
        print("underflow")     #그것도 아니라면 기준 미만이라고 출력한다.
    return que                #그리고 stack를 반환한다.


max_length = 3              #max_lengrth에다가 3을 대입한다.
que = []                  #stack에다는 아무것도 안 넣는다.

while True:                      #무한루프

    choice = input("Enter enqueue or dequeue :")         #que에다가 "Enter push or pop"값에 대입한다

    if choice == "enqueue":               #만약 que가 push와 같으면
        data = int(input("Enter your number :"))                  #data에다가 "Enter your number :"값에 대입한다.

        que = enqueue(que, data, max_length)              #stack에다가 push 값을 대입한다.
    if choice == "dequeue":                    #만약 que가 pop와 같으면
        que = dequeue(que)                 #stack를 pop값에 대입한다.
"""
